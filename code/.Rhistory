# Bloque 1: fundamentos de R.
celsius_a_kelvin <- function(celsius) {
kelvin <- celsius + 273.15
return(kelvin)
}
temperatura_celsius <- 25
temperatura_kelvin <- celsius_a_kelvin(temperatura_celsius)
print(paste(temperatura_celsius, "grados Celsius son equivalentes a", temperatura_kelvin, "Kelvin."))
matriz_vectores <- function(vector1, vector2) {
if(length(vector1) != length(vector2)) {
stop("Los vectores deben tener la misma longitud.")
}
matriz <- matrix(c(vector1, vector2), ncol = 2)
return(matriz)
}
vector1 <- c(1, 2, 3, 4, 5)
vector2 <- c(6, 7, 8, 9, 10)
matriz_resultante <- matriz_vectores(vector1, vector2)
print("Matriz resultante:")
print(matriz_resultante)
matriz_vectores <- function(vector1, vector2) {
if(length(vector1) != length(vector2)) {
stop("Los vectores deben tener la misma longitud.")
}
matriz <- matrix(c(vector1, vector2), nrow = 2, byrow = TRUE)
return(matriz)
}
# Ejemplo de uso
vector1 <- c(1, 2, 3, 4, 5)
vector2 <- c(6, 7, 8, 9, 10)
matriz_resultante <- matriz_vectores(vector1, vector2)
print("Matriz resultante:")
print(matriz_resultante)
tamaño_minimo <- function(vector1, vector2) {
tamaño <- min(length(vector1), length(vector2))
return(tamaño)
}
vector1 <- c(1, 2, 3, 4, 5)
vector2 <- c(6, 7, 8)
tamaño <- tamaño_minimo(vector1, vector2)
print(paste("El tamaño del vector más pequeño es:", tamaño))
coordenadas <- cbind(c(1, 2, 3, 4, 5, 6, 5, 4, 3, 2), c(1, 2, 3, 4, 5, 6, 7, 8, 7, 6))
# Crear el gráfico con puntos en rojo
plot(coordenadas, pch = 19, col = "red", xlab = "Eje X", ylab = "Eje Y", main = "Gráfico Bidimensional de los Puntos")
# Crear el gráfico con puntos en rojo
plot(coordenadas, pch = 19, col = "", xlab = "x", ylab = "y", cex=2)
# Crear el gráfico con puntos en rojo
plot(coordenadas, pch = 19, col = "maroon", xlab = "x", ylab = "y", cex=2)
par(mgp=c(2, 1, 0))
# Crear el gráfico con puntos en rojo
plot(coordenadas, pch = 19, col = "maroon", xlab = "x", ylab = "y", cex=2)
par(mgp=c(2, 1, 0))
# Crear el gráfico con puntos en rojo
plot(coordenadas, pch = 19, col = "maroon", xlab = "x", ylab = "y", cex=2)
par(mgp=c(1, 2, 0))
# Crear el gráfico con puntos en rojo
plot(coordenadas, pch = 19, col = "maroon", xlab = "x", ylab = "y", cex=2)
par(mgp=c(1, 2, 0))
# Crear el gráfico con puntos en rojo
plot(coordenadas, pch = 19, col = "maroon", xlab = "x", ylab = "y", cex=2)
par(mfrow=c(1,1), mar=c(1,1,1,1))
plot(coordenadas, pch = 19, col = "maroon", xlab = "x", ylab = "y", cex=2)
par(mfrow=c(2,1))
plot(coordenadas, pch = 19, col = "maroon", xlab = "x", ylab = "y", cex=2)
par(mfrow=c(2,1))
plot(coordenadas, pch = 19, col = "maroon", xlab = "x", ylab = "y", cex=2)
coordenadas <- cbind(c(1, 2, 3, 4, 5, 6, 5, 4, 3, 2), c(1, 2, 3, 4, 5, 6, 7, 8, 7, 6))
par(mfrow=c(1,1))
plot(coordenadas, pch = 19, col = "maroon", xlab = "x", ylab = "y", cex=2)
coordenadas <- cbind(c(1, 2, 3, 4, 5, 6, 5, 4, 3, 2), c(1, 2, 3, 4, 5, 6, 7, 8, 7, 6))
par(mfrow=c(1,2))
plot(coordenadas, pch = 19, col = "maroon", xlab = "x", ylab = "y", cex=2)
coordenadas <- cbind(c(1, 2, 3, 4, 5, 6, 5, 4, 3, 2), c(1, 2, 3, 4, 5, 6, 7, 8, 7, 6))
par(mfrow=c(1,3))
plot(coordenadas, pch = 19, col = "maroon", xlab = "x", ylab = "y", cex=2)
coordenadas <- cbind(c(1, 2, 3, 4, 5, 6, 5, 4, 3, 2), c(1, 2, 3, 4, 5, 6, 7, 8, 7, 6))
par(mfrow=c(1,3))
plot(coordenadas, pch = 19, col = "maroon", xlab = "x", ylab = "y", cex=4)
coordenadas <- cbind(c(1, 2, 3, 4, 5, 6, 5, 4, 3, 2), c(1, 2, 3, 4, 5, 6, 7, 8, 7, 6))
par(mfrow=c(1,3))
plot(coordenadas, pch = 19, col = "maroon", xlab = "x", ylab = "y", cex=3)
coordenadas <- cbind(c(1, 2, 3, 4, 5, 6, 5, 4, 3, 2), c(1, 2, 3, 4, 5, 6, 7, 8, 7, 6))
par(mfrow=c(1,3))
plot(coordenadas, pch = 19, col = "maroon", xlab = "x", ylab = "y", cex=4)
grafo <- graph(edges=c(1,2, 2,3), n=3, directed=TRUE)
library(igraph)
grafo <- graph(edges=c(1,2, 2,3), n=3, directed=TRUE)
# Visualizar el grafo
plot(grafo, main="Grafo con tres nodos unidireccionales")
grafo <- graph(edges=c(1,2, 2,3,3,1), n=3, directed=TRUE)
# Visualizar el grafo
plot(grafo, main="Grafo con tres nodos unidireccionales")
grafo <- graph(vertex(1:30), n=3, directed=TRUE)
grafo <- graph(vertex(1:30), n=30, directed=FALSE)
1:30
grafo <- graph(vertices=vertex(1:30), n=30, directed=FALSE)
grafo <- graph(vertices=vertex(1:30), edges = (1,2,3,1), n=30, directed=FALSE)
grafo <- graph(vertices=vertex(1:30), edges = (c(1,2,3,1)), n=30, directed=FALSE)
grafo <- graph(vertices=1:30, edges = (c(1,2,3,1)), n=30, directed=FALSE)
grafo <- graph(edges = (c(1,2,3,1)), n=30, directed=FALSE)
plot(grafo)
plot(grafo, layout_nicely)
plot(grafo, layout=layout_nicely)
plot(grafo, layout=layout_in_circle())
plot(grafo, layout=layout_in_circle)
plot(grafo, layout=layout.auto)
plot(grafo, layout=layout.circle)
plot(grafo, layout=layout_as_star)
plot(grafo, layout=layout_on_sphere)
plot(grafo)
grafo <- graph(edges = (c(1,2,3,1)), n=30, directed=FALSE)
plot(grafo)
```{r}
grafo <- graph(edges = (c(1,2,3,1)), n=30, directed=FALSE)
plot(grafo)
plot(grafo, layout=layout_nicely)
grafo <- graph(edges = (c(1,2,3,3,1)), n=30, directed=FALSE)
grafo <- graph(edges = (c(1,2, 2,3,3,1)), n=30, directed=FALSE)
plot(grafo, layout=layout_nicely)
grafo <- graph(edges = (c(1,2, 2,3,3,1)), n=30, directed=FALSE)
plot(grafo, layout=layout_nicely)
grafo <- graph(edges = (c(1,2, 2,3,3,1)), n=30, directed=FALSE)
plot(grafo, layout=layout_nicely)
grafo <- graph(edges = (c(1,2, 2,3,3,1)), n=30, directed=FALSE)
plot(grafo, layout=layout_nicely)
grafo <- graph(edges = (c(1,2, 2,3,3,1)), n=30, directed=FALSE)
plot(grafo, layout=layout_nicely)
grafo <- graph(edges = (c(1,2, 2,3,3,1)), n=30, directed=FALSE)
plot(grafo, layout=layout_nicely)
grafo <- graph(edges = (c(1,2, 2,3,3,1)), n=30, directed=FALSE)
plot(grafo, layout=layout_nicely)
grafo <- graph(edges = (c(1,2, 2,3,3,1)), n=30, directed=FALSE)
plot(grafo, layout=layout_nicely)
grafo <- graph(edges=c('a','b', 'c','b', 'a','c','c','a'), n=3, directed=TRUE)
library(igraph)
grafo <- graph(edges=c('a','b', 'c','b', 'a','c','c','a'), n=3, directed=TRUE)
# Visualizar el grafo
plot(grafo)
a:f
'a':'f'
grafo <- graph_from_literal(a:b:c:d:e:f:g--h)
library(igraph)
grafo <- graph_from_literal(a:b:c:d:e:f:g--h)
# Visualizar el grafo
plot(grafo)
grafo <- graph_from_literal(Jim--+Jill, Jill+--John, John+--John)
# Visualizar el grafo
plot(grafo)
grafo <- graph_from_literal(Jim--+Jill, Jill+--John, John--John)
# Visualizar el grafo
plot(grafo)
grafo <- graph_from_literal(Jim--+Jill, Jill+--John, John+--+John)
# Visualizar el grafo
plot(grafo)
grafo <- graph_from_literal(Jim--+Jill, Jill+--John, John--+John, John--+Jill)
# Visualizar el grafo
plot(grafo)
grafo <- graph_from_literal(Jim--+Jill, Jill+--John, John--+John, John--+Jim)
# Visualizar el grafo
plot(grafo)
setwd("C:/Users/Carlos/Desktop/Universidad/CUARTO/Biología de Sistemas/HPO_Dysgraphia/code")
cat("\014")
## Configurar el directorio de trabajo
setwd(substr(this.path(),1,(nchar(this.path())-28)))
suppressMessages(library(igraph))
suppressMessages(library(this.path))
install.packages("this.path")
suppressMessages(library(this.path))
## Configurar el directorio de trabajo
setwd(substr(this.path(),1,(nchar(this.path())-28)))
graph <- graph.data.frame(read.csv("grafo_17_genes.csv"), directed = FALSE)
setwd("C:/Users/Carlos/Desktop/Universidad/CUARTO/Biología de Sistemas/HPO_Dysgraphia/code")
graph <- graph.data.frame(read.csv("grafo_17_genes.csv", sep="\t"), directed = FALSE)
getwd()
setwd(dirname(sys.frame(1)$ofile))
dirname(parent.frame(2)$ofile)
source("C:/Users/Carlos/Desktop/Universidad/CUARTO/Biología de Sistemas/HPO_Dysgraphia/code/analisis_comunidades.R", echo=TRUE)
source("C:/Users/Carlos/Desktop/Universidad/CUARTO/Biología de Sistemas/HPO_Dysgraphia/code/analisis_comunidades.R", echo=TRUE)
source("C:/Users/Carlos/Desktop/Universidad/CUARTO/Biología de Sistemas/HPO_Dysgraphia/code/analisis_comunidades.R", echo=TRUE)
source("C:/Users/Carlos/Desktop/Universidad/CUARTO/Biología de Sistemas/HPO_Dysgraphia/code/analisis_comunidades.R", echo=TRUE)
getwd()
E(graph)
N(graph)
V(graph)
# Creación de grafo
graph <- graph.data.frame(read.csv("grafo_17_genes.csv", sep="\t"), directed = TRUE)
lo <- layout_with_kk(net) # Creamos la disposición (layout) de los nodos
lo <- layout_with_kk(graph) # Creamos la disposición (layout) de los nodos
lo <- norm_coords(lo, ymin=-1, ymax=1, xmin=-1, xmax=1)
plot(graph, edge.arrow.size=0.2, edge.curved=0.1, vertex.size=15, vertex.color="white", vertex.frame.color="black", vertex.label.color="black",vertex.label.cex=0.4, layout=lo)
# Creación de grafo
graph <- graph.data.frame(read.csv("grafo_17_genes.csv", sep="\t"), directed = TRUE)
plot(graph, edge.arrow.size=0.2, edge.curved=0.1, vertex.size=15, vertex.color="white", vertex.frame.color="black", vertex.label.color="black",vertex.label.cex=0.4)
V(graph)
# Creación de grafo
graph <- graph.data.frame(read.csv("grafo_17_genes.csv", sep="\t"), directed = TRUE)
V(graph)
plot(graph, edge.arrow.size=0.2, edge.curved=0.1, vertex.size=15, vertex.color="white", vertex.frame.color="black", vertex.label.color="black",vertex.label.cex=0.4)
# Creación de grafo
graph <- graph.data.frame(read.csv("grafo_17_genes.csv", sep="\t"), directed = TRUE)
V(graph)
plot(graph, edge.arrow.size=0.2, edge.curved=0.1, vertex.size=15, vertex.color="white", vertex.frame.color="black", vertex.label.color="black",vertex.label.cex=0.4)
